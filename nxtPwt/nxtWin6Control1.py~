# -*- coding: utf-8 -*-
"""
 Copyright (c) 2014 l8orre

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

"""

#import sys


from PyQt4 import QtGui, Qt, QtCore
from PyQt4.QtCore import QObject , pyqtSignal, pyqtSlot, SIGNAL
from PyQt4.QtCore import  QObject
#import numpy as np
from os import listdir as ls
#from PyQt4.Qt import QPixmap
import os
import time
#import requests, json
 
#from nxtApiPrototypes import nxtQs

class nxtWin6Control(QObject):
    """ class nxtWin6Control(): here THIS IS A BACKUP FOR RAW API ACCESS WITH PARAMS TAKEN FROM THE WDGETS""" 
    
    
    UC_test1_activate = pyqtSignal(object) # (object)  
    UC_test2_activate = pyqtSignal(object) # (object)  
      
    
    def __init__(self, app): #, application
        super(QObject, self, ).__init__()
        import  FR.ui_nxtWin6 as nxtWin6  # the QtCreator-generated Widget.py!!
        ui = nxtWin6.Ui_MainWindow() # Ui_MainWindow() is the autogenerated class in m2def.py
        self.ui_nxtWin6 = ui 
        self.app = app  # 
         
        self.localTimer1 = QtCore.QTimer() #  local TIMER
        self.localTime1 = 2000
        
        self.app.nxtWin6 = self # make this   WinControl1  known  in the app namespace.  When this Win throws sigs, they can be recvd anywhere where this isknown.
        
        # Init the useCases:  # make this window known in the useCases that feed it.
        
        self.app.sessMan.ucTest1.initWin6(self.app.nxtWin6, ui)
        self.app.sessMan.ucTest2.initWin6(self.app.nxtWin6, ui)
        
        
        
           
    def init(self): 
        """ nxtWin6""" 
        ui = self.ui_nxtWin6
        # currently callbacks for 42 api calls 013114
         
        
        #ui.textEdit_testComment.setTextColor(Qt.Qt.red)
        #ui.textEdit_testComment.setFontPointSize(12)

        ui.textEdit_testComment.append("test comments go here")
        ui.textEdit_testReport.append("test reports go here")
        
        #QtGui.QMessageBox(self, 'Welcome to FreeRider. Please read the Release Notes')
        QtCore.QObject.connect(ui.pb_test1Prep , SIGNAL("clicked()"), self.UC_test1_prepCB )
        QtCore.QObject.connect(ui.pb_test1Start , SIGNAL("clicked()"), self.UC_test1_activateCB )
        QtCore.QObject.connect(ui.pb_test2Prep , SIGNAL("clicked()"), self.UC_test2_prepCB )
        QtCore.QObject.connect(ui.pb_test2Start , SIGNAL("clicked()"), self.UC_test2_activateCB )
        
        QtCore.QObject.connect(ui.pb_clearComments, SIGNAL("clicked()"), self.clearComments_CB) # <- this constructs and sends the Query
        
        QtCore.QObject.connect(ui.pb_clearReplies, SIGNAL("clicked()"), self.clearReplies_CB) # <- this constructs and sends the Query
        
        
        
    
    def UC_test1_activateCB(self,):
        self.emit( SIGNAL( "UC_test1_activate(PyQt_PyObject)"), {'uc':'test1'} )    # 
      
    def UC_test1_prepCB(self,):
        ui = self.ui_nxtWin6
        ui.textEdit_testComment.append(self.app.sessMan.ucTest1.__doc__)
        
        
        
        
    
    def UC_test2_activateCB(self,):
        self.emit( SIGNAL( "UC_test2_activate(PyQt_PyObject)"),  {'uc':'test2'} )    # 
      
    def UC_test2_prepCB(self,):
        ui = self.ui_nxtWin6
        ui.textEdit_testComment.append(self.app.sessMan.ucTest2.__doc__) # put the doc string into the comment textEdit
        
        
    def clearComments_CB(self,):
        ui = self.ui_nxtWin6
        ui.textEdit_testComment.clear()
        
    def clearReplies_CB(self,):
        ui = self.ui_nxtWin6
        ui.textEdit_testReport.clear()
        
        
        
        
        


############################
############################        
############################
########## Window Maintenance

    
    def show(self):
        self.uiFrame = QtGui.QMainWindow()
        self.ui_nxtWin6.setupUi(self.uiFrame)
        self.init() #self.ui_AlgoWin)
        self.uiFrame.show()     


        
        
        
         